# This is a basic workflow to help you get started with Actions

name: Picota-infraestructure-cloud

on:
  push:
    branches: [ trunk, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  dev:
    runs-on: ubuntu-latest
    environment: picota-dev
    if: github.ref == 'refs/heads/trunk' || github.ref == 'refs/heads/develop'
    env: 
      name: dev
      front_domain: ${{ secrets.FRONT_DOMAIN }}
      aws_key_id: ${{ secrets.AWS_KEY_ID }}
      aws_access_key: ${{ secrets.AWS_KEY_SECRET }}
      aws_region: ${{ secrets.AWS_REGION }}
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.aws_key_id }}
          aws-secret-access-key: ${{ env.aws_access_key }}
          aws-region: ${{ env.aws_region }}

      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          no-fail-on-empty-changeset: "1"
          name: picota-aws-dev-stack
          template: template.yaml
          parameter-overrides: >-
            env=${{ env.name }},
            frontDomain=${{ env.front_domain }}
  
  pdn:
    needs: dev
    if: github.ref == 'refs/heads/trunk'
    runs-on: ubuntu-latest
    environment: picota-pnd
    env: 
      name: pnd
      front_domain: ${{ secrets.FRONT_DOMAIN }}
      aws_key_id: ${{ secrets.AWS_KEY_ID }}
      aws_access_key: ${{ secrets.AWS_KEY_SECRET }}
      aws_region: ${{ secrets.AWS_REGION }}
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.aws_key_id }}
          aws-secret-access-key: ${{ env.aws_access_key }}
          aws-region: ${{ env.aws_region }}

      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          no-fail-on-empty-changeset: "1"
          name: picota-aws-dev-stack
          template: template.yaml
          parameter-overrides: >-
            env=${{ env.name }},
            frontDomain=${{ env.front_domain }}


